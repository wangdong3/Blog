(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{441:function(e,v,_){"use strict";_.r(v);var o=_(56),r=Object(o.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"zookeeper"}},[_("code",[e._v("zookeeper")])]),e._v(" "),_("h2",{attrs:{id:"_1-概念"}},[e._v("1.概念")]),e._v(" "),_("p",[_("code",[e._v("zookeeper")]),e._v(" 是一个为分布式应用提供一致性服务的的开源组件，其内部是一个分层文件系统目录结构。")]),e._v(" "),_("ul",[_("li",[_("p",[_("strong",[e._v("文件系统")])]),e._v(" "),_("p",[_("code",[e._v("zookeeper")]),e._v(" 提供一个多层级的节点（"),_("code",[e._v("znode")]),e._v("）命名空间，这些节点可以设置关联的数据。在内存中维护这个"),_("code",[e._v("树状")]),e._v("的目录结构，保证高吞吐和低延迟。")]),e._v(" "),_("p",[e._v("四种类型的 "),_("code",[e._v("znode")])]),e._v(" "),_("ul",[_("li",[_("p",[e._v("持久化目录节点")]),e._v(" "),_("p",[e._v("客户端与"),_("code",[e._v("zookeeper")]),e._v("断开连接以后，该节点依然存在")])]),e._v(" "),_("li",[_("p",[e._v("持久化顺序号目录节点")]),e._v(" "),_("p",[e._v("客户端与"),_("code",[e._v("zookeeper")]),e._v("断开连接后，该节点依然存在，只是"),_("code",[e._v("zookeeper")]),e._v("给该节点名称顺序编号")])]),e._v(" "),_("li",[_("p",[e._v("临时目录节点")]),e._v(" "),_("p",[e._v("客户端与"),_("code",[e._v("zookeeper")]),e._v("断开连接后，该节点被删除")])]),e._v(" "),_("li",[_("p",[e._v("临时顺序号目录节点")]),e._v(" "),_("p",[e._v("客户端与"),_("code",[e._v("zookeeper")]),e._v("断开连接后，该节点被删除，只是"),_("code",[e._v("zookeeper")]),e._v("给该节点名称进行顺序编号")])])])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("通知机制")])]),e._v(" "),_("p",[e._v("客户端注册监听它所关注的"),_("code",[e._v("znode")]),e._v("节点，"),_("code",[e._v("zookeeper")]),e._v("会对"),_("code",[e._v("znode")]),e._v("建立"),_("code",[e._v("watcher")]),e._v("事件，当"),_("code",[e._v("znode")]),e._v("发生改变时，"),_("code",[e._v("client")]),e._v("会收到"),_("code",[e._v("zookeeper")]),e._v("的通知，然后"),_("code",[e._v("client")]),e._v("根据"),_("code",[e._v("znode")]),e._v("变化作出业务的改变。")])])]),e._v(" "),_("h2",{attrs:{id:"_2-使用场景"}},[e._v("2.使用场景")]),e._v(" "),_("ul",[_("li",[_("p",[_("strong",[e._v("配置管理")])]),e._v(" "),_("p",[e._v("应用程序的配置放到"),_("code",[e._v("zookeeper")]),e._v("上，保存在"),_("code",[e._v("zookeeper")]),e._v("的某个目录节点中，然后所有相关的应用程序监听该目录节点，一旦配置信息发生变化，每个应用程序都会收到"),_("code",[e._v("zookeeper")]),e._v("的通知，然后从"),_("code",[e._v("zookeeper")]),e._v("获取新的配置信息应用到应用程序。")]),e._v(" "),_("div",{staticClass:"language-mermaid line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-mermaid"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("sequenceDiagram")]),e._v("\n发布者"),_("span",{pre:!0,attrs:{class:"token arrow operator"}},[e._v("->>")]),e._v("zookeeper"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),_("span",{pre:!0,attrs:{class:"token text string"}},[e._v("(2.更新配置信息)")]),e._v("\n订阅者"),_("span",{pre:!0,attrs:{class:"token arrow operator"}},[e._v("->>")]),e._v("zookeeper"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),_("span",{pre:!0,attrs:{class:"token text string"}},[e._v("(1.注册watcher监听)")]),e._v("\nzookeeper"),_("span",{pre:!0,attrs:{class:"token arrow operator"}},[e._v("->>")]),e._v("订阅者"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),_("span",{pre:!0,attrs:{class:"token text string"}},[e._v("(3.推送watcher事件)")]),e._v("\n订阅者"),_("span",{pre:!0,attrs:{class:"token arrow operator"}},[e._v("->>")]),e._v("zookeeper"),_("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),_("span",{pre:!0,attrs:{class:"token text string"}},[e._v("(4.回调拉取更新配置信息)")]),e._v("\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br")])])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("集群管理")])]),e._v(" "),_("p",[e._v("当前集群各个主机的运行状态、存活信息")]),e._v(" "),_("p",[e._v("监控服务的退出和加入，选举"),_("code",[e._v("master")])]),e._v(" "),_("p",[e._v("所有服务约定在指定父目录下创建临时节点，然后监听父目录节点的变化信息，一旦某个服务挂掉，意味着其与"),_("code",[e._v("zookeeper")]),e._v("的连接断开，那么其创建的临时节点就会被删除，其他服务也会收到监控通知，某个兄弟目录被删除了。")]),e._v(" "),_("p",[e._v("每个服务同时也会创建临时顺序编号目录节点，取编号最小的作为"),_("code",[e._v("master")]),e._v("。")])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("分布式锁")])]),e._v(" "),_("p",[e._v("锁服务可分为两类，保持独占，控制时序")]),e._v(" "),_("p",[e._v("客户端通过创建临时节点来获取锁，获取锁之后完成业务处理会把临时节点删除；")]),e._v(" "),_("p",[e._v("锁如果已经预先存在，那么所有客户就要在其下面创建临时顺序目录节点，编号最小的获得锁；")])]),e._v(" "),_("li",[_("p",[_("strong",[_("code",[e._v("master")]),e._v("选举")])]),e._v(" "),_("p",[e._v("1.多个客户端同时发起对同一个临时节点进行创建的请求，最终只能有一个创建成功，这个成功的客户端主机就是"),_("code",[e._v("master")]),e._v("。")]),e._v(" "),_("p",[e._v("2.其他客户端注册对改master的监听事件")]),e._v(" "),_("p",[e._v("3.如果"),_("code",[e._v("master")]),e._v("异常，临时节点也随之删除，"),_("code",[e._v("zk")]),e._v("服务器会发送节点变更事件，"),_("code",[e._v("salve")]),e._v("接收到之后会回调重新发起创建临时节点请求，创建成功的将成为新的"),_("code",[e._v("master")])])]),e._v(" "),_("li",[_("p",[_("strong",[e._v("队列管理")])]),e._v(" "),_("ul",[_("li",[_("p",[e._v("同步队列")]),e._v(" "),_("p",[e._v("当一个队列的成员都聚齐时，这个队列才有用，否则一直等待所有成员到达")])]),e._v(" "),_("li",[_("p",[e._v("队列按照"),_("code",[e._v("FIFO")]),e._v("的方式进行入队和出队")]),e._v(" "),_("p",[e._v("按照临时顺序目录号，进行出入队")])])])])]),e._v(" "),_("h2",{attrs:{id:"_3-底层原理"}},[e._v("3.底层原理")]),e._v(" "),_("p",[_("code",[e._v("zookeeper")]),e._v("的核心是原子广播，这个机制保证了各个"),_("code",[e._v("server")]),e._v("之间的同步。实现该机制的协议叫"),_("code",[e._v("zab")]),e._v("协议。有两种模式，恢复模式和广播模式；当服务启动或者"),_("code",[e._v("leader")]),e._v("崩溃，进入恢复模式，当"),_("code",[e._v("leader")]),e._v("被选出来，各个"),_("code",[e._v("server")]),e._v("完成了状态同步后，恢复模式结束；")]),e._v(" "),_("p",[e._v("为保证分布式事务的一致性，"),_("code",[e._v("zookeeper")]),e._v("采用递增事务"),_("code",[e._v("id")]),e._v("号（"),_("code",[e._v("zxid")]),e._v("）来标识事务。")]),e._v(" "),_("p",[e._v("（1）"),_("code",[e._v("server")]),e._v("向集群中其他服务发起询问")]),e._v(" "),_("p",[e._v("（2）接收询问信息，验证"),_("code",[e._v("zxid")]),e._v("是否一致，获取对方的"),_("code",[e._v("id")]),e._v("，存到自己的已询问列表中")]),e._v(" "),_("p",[e._v("（3）获取对方提议的"),_("code",[e._v("leader")]),e._v("信息，存到当前投票记录列表中")]),e._v(" "),_("p",[e._v("（4）统计选举结果，超过半数以上的推举为"),_("code",[e._v("leader")])])])}),[],!1,null,null,null);v.default=r.exports}}]);